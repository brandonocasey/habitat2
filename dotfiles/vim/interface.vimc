"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" View line numbers etc in the bottom right
set ruler

" Show matching brackets when text indicator is over them
set showmatch

" For regular expressions turn magic on making vim more like grep
set magic

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases
" capital matches capital only, lower case matches all
set smartcase

" Highlight search terms...
set hlsearch
set incsearch " ...dynamically as they are typed.

" Don't redraw while executing macros (good performance config)
set lazyredraw

" No annoying sound on errors
set noerrorbells visualbell t_vb=
if has('autocmd')
  autocmd GUIEnter * set visualbell t_vb=
endif

" Configure backspace so it acts as it should act
set backspace=eol,start,indent

" allow left, right, h, and l to go back and forward over newlines
" set whichwrap+=<,>,[,],h,l

" Never assume a file has mode lines, causes vim to freak out if the file
" containes ex: command because vim thinks there is a command in the file
set modelines=0

" Reload instead of scrolling when more than 3 lines to be scrolled
if has('nvim') != 1
  set ttyscroll=10
endif

" Use the new regex engine always
if v:version > 740
  set re=1
endif

" Dont do syntax highlighting for big lines, makes vim slow, not slow enough
" to warrent me thinks
" set synmaxcol=200

" Slightly highlight the line the cursor is on
" TODO: Find out why this lags everything
"set cursorline

" Title of file in bar at the top
set title

" Allow sytax highlighting in vim
syntax enable

" Better redrawing for large files
set ttyfast

" Delete comment character when joining commented lines
if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j
endif

" stop slowdowns in certain files due to fold method
" Sourced from vim tip: http://vim.wikia.com/wiki/Keep_folds_closed_while_inserting_text
autocmd InsertEnter * if !exists('w:last_fdm') | let w:last_fdm=&foldmethod | setlocal foldmethod=manual | endif
autocmd InsertLeave,WinLeave * if exists('w:last_fdm') | let &l:foldmethod=w:last_fdm | unlet w:last_fdm | endif
